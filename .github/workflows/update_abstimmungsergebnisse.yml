name: Update Abstimmungsergebnisse

on:
  schedule:
    - cron: '0 6 * * 1' # jeden Montag um 8 Uhr
  workflow_dispatch:


jobs:
  update_data_py:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    environment: integration
    strategy:
      matrix:
        python-version: [3.12]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version}}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r automation/automation-requirements.txt

    - name: Prepare data
      run: |
        python automation/abstimmungsergebnisse/fetch_all_data.py -f abstimmungen_seit1933.csv -p abstimmungen_seit1933.parquet
        head abstimmungen_seit1933.csv
        echo "..."
        tail abstimmungen_seit1933.csv
        
    - name: Upload files to CKAN
      env:
        CKAN_BASE_URL: ${{ secrets.CKAN_BASE_URL }}
        CKAN_API_KEY: ${{ secrets.CKAN_API_KEY }}
        SSL_VERIFY: ${{ secrets.SSL_VERIFY }}
      run: |
        python automation/upload_resource_to_ckan_with_patch.py -f abstimmungen_seit1933.csv -d politik_abstimmungen_seit1933
        python automation/upload_resource_to_ckan_with_patch.py -f abstimmungen_seit1933.parquet -d politik_abstimmungen_seit1933

    - name: Update CKAN metadata
      env:
        CKAN_BASE_URL: ${{ secrets.CKAN_BASE_URL }}
        CKAN_API_KEY: ${{ secrets.CKAN_API_KEY }}
        SSL_VERIFY: ${{ secrets.SSL_VERIFY }}
      run: |
        python automation/xls_to_meta_xml.py -f automation/abstimmungsergebnisse/politik_abstimmungen_seit1933_metadata.xlsx  --outfile automation/abstimmungsergebnisse/meta.xml
        python automation/update_metadata.py -d politik_abstimmungen_seit1933 -f automation/abstimmungsergebnisse/meta.xml

    - name: Notify telegram failure
      if: ${{ failure()  || cancelled() }}
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_ERROR_CHAT_ID }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        format: markdown
        message: |
          ðŸ”´ [CKAN Metadaten Inventar Job Failed](https://github.com/opendatazurich/opendatazurich.github.io/actions/runs/${{ github.run_id }}?check_suite_focus=true)
