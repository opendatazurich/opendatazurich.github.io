name: Update wapo_wetterstationen data

on:
  schedule:
  - cron: '3/10 * * * *' # every 10min
  workflow_dispatch:

jobs:
  update_data_py:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    environment: production

    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v5
      
    - name: "Set up Python"
      uses: actions/setup-python@v5
      with:
        python-version: 3.12

    - name: Install requirements
      run: uv pip install -r automation/automation-requirements.txt
      env:
        UV_SYSTEM_PYTHON: 1
        
    - name: Prepare data
      env:
        WAPO_FTP_HOST: ${{ secrets.wapo_ftp_host }}
        WAPO_FTP_USER: ${{ secrets.wapo_ftp_user }}
        WAPO_FTP_PASSWORD: ${{ secrets.wapo_ftp_password }}
      run: automation/wapo_wetterstationen/run.sh
        
        
    - name: Upload files to CKAN
      env:
        CKAN_BASE_URL: ${{ secrets.CKAN_BASE_URL }}
        CKAN_API_KEY: ${{ secrets.CKAN_API_KEY }}
        SSL_VERIFY: ${{ secrets.SSL_VERIFY }}
      run: |
        my_path=$(ls automation/wapo_wetterstationen/messwerte_mythenquai_*.csv | head -n1)
        tb_path=$(ls automation/wapo_wetterstationen/messwerte_tiefenbrunnen_*.csv | head -n1)
        python automation/upload_resource_to_ckan_with_patch.py -f $my_path -d sid_wapo_wetterstationen
        python automation/upload_resource_to_ckan_with_patch.py -f $tb_path -d sid_wapo_wetterstationen
        python automation/upload_resource_to_ckan_with_patch.py -f automation/wapo_wetterstationen/messwerte_mythenquai_seit2007-heute.parquet -d sid_wapo_wetterstationen
        python automation/upload_resource_to_ckan_with_patch.py -f automation/wapo_wetterstationen/messwerte_tiefenbrunnen_seit2007-heute.parquet -d sid_wapo_wetterstationen


    - name: Update CKAN metadata
      env:
        CKAN_BASE_URL: ${{ secrets.CKAN_BASE_URL }}
        CKAN_API_KEY: ${{ secrets.CKAN_API_KEY }}
        SSL_VERIFY: ${{ secrets.SSL_VERIFY }}
      run: |
        python automation/xls_to_meta_xml.py -f automation/wapo_wetterstationen/Metadaten_wetterstationen_my.xlsx --outfile automation/wapo_wetterstationen/meta.xml --tag github
        python automation/update_metadata.py -d sid_wapo_wetterstationen -f automation/wapo_wetterstationen/meta.xml

    - name: Notify telegram failure
      if: ${{ failure()  || cancelled() }}
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_ERROR_CHAT_ID }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        format: markdown
        message: |
          ðŸ”´ [WAPO Wetterstationen Job Failed](https://github.com/opendatazurich/opendatazurich.github.io/actions/runs/${{ github.run_id }}?check_suite_focus=true)
